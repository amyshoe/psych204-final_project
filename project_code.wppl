// CS428/PSYCH204 Final Project
// Authors: Amy Shoemaker and Luis Apolaya


/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// As a simple starting model, our simpleMathProblemSolver() uses the problem  //
// type to determine what strategy is used.                                    //
//                                                                             //
// It then calls on getAnswer() to utilize that strategy to return a boolean   //
// representing whether a correct or incorrect answer is returned.             //
//                                                                             //
// We then foward sample from this model with given problems                   //
// Our current goal is to get the histogram results to align with our priors   //
// i.e., the percentage results from the Nathan and Koedinger paper            //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

//TODO: What are we observing or conditioning on? 
// ---THIS IS NEARLY DETERMINISTIC RIGHT NOW---

// TODO: make this a function of `problem`, too. 
// And replace the simple `elif` structure with more complex cognitive notions

//FACTOR statement on student assumptions about what a problem should look like
//Q: why do people think certain strategies are good for certain problems
var getAnswer = function(strategy){
    var answer = 
        // STRATEGY: Symbol Manipulation
        strategy == "symbol_manip" ? flip(.51) :
        // STRATEGY: Guess n check
        strategy == "guess_check" ? flip(.71) :
        // STRATEGY: Unwind
        strategy == "unwind" ? flip(.69) :
        // STRATEGY: Answer only 
        strategy == "answer_only" ? flip(.56) : 
        // No answer
        false

    // 19/1976 chance of typo (otherwise return answer)
    return flip(.0096) ? false : answer
}

var simpleMathProblemSolver = function(problem){
    // TODO: need to fix this: how do we determine what strategy is used?
    //        can we multinomial sample or something?
    // OR maybe a dirchilet with percentage values as pseudo counts???
    //
    // Also, what do we do with unkown column?
    //
    //       UNWIND GUESS/CHECK   SYM_MANIP   NO ANS   ANS ONLY   UNKNOWN
    // Story   50       7             5         12        18         8 
    // Word    22      23            11         13        19        12
    // Eq      13      14            22         32        11         8 
    //

    var strategy = 
        // EQUATION
        !problem.verbal && !problem.story ? 
            (flip(.22) ? "symbol_manip" :
            flip(.14) ? "guess_check" :
            flip(.13) ? "unwind" :
            flip(.11) ? "answer_only" :
            flip(.32) ? "no_answer" : "unknown") :
        // WORD
        (problem.verbal && !problem.story ?
            (flip(.11) ? "symbol_manip" :
            flip(.23) ? "guess_check" :
            flip(.22) ? "unwind" :
            flip(.19) ? "answer_only" :
            flip(.13) ? "no_answer" : "unknown") :
        // STORY
        (!problem.verbal && !problem.story ? 
            (flip(.05) ? "symbol_manip" :
            flip(.07) ? "guess_check" :
            flip(.5) ? "unwind" :
            flip(.18) ? "answer_only" :
            flip(.12) ? "no_answer" : "unknown") : "unknown"))
    var answer = getAnswer(strategy)
    return answer
}

//STEPS (order of ops, which ops) ----- input seq vs computing seq
//TODO: TRY APPLYING STRATEGIES, SEE WHAT INFO YOU NEED, ADD THAT INTO THESE FACTORS
// TODO: ADD IN MAYBE ACTION/PROCEDURAL VS NOT

// question: WHAT DO DIFFERENT STRATEGEIES DO (TO PROBLEMS) TO GET ANSWER

var model = function(){
    var p1 = { verbal: true, story: false } 
    return simpleMathProblemSolver(p1)
}

var d = Infer({method: 'forward', samples: 1000}, model)

d