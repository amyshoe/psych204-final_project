// CS428/PSYCH204 Final Project
// Authors: Amy Shoemaker and Luis Apolaya


/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// As a simple starting model, our simpleMathProblemSolver() uses the problem  //
// type to determine what strategy is used.                                    //
//                                                                             //
// It then calls on getAnswer() to utilize that strategy to return a boolean   //
// representing whether a correct or incorrect answer is returned.             //
//                                                                             //
// We then foward sample from this model with given problems                   //
// Our current goal is to get the histogram results to align with our priors   //
// i.e., the percentage results from the Nathan and Koedinger paper            //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

var eq2procedure = function(problem){
    //blue success
}

var story2procedure = function(problem){
    // if problem.num_refs == 1: green success
    // if problem.num_refs == 2: red success
}

var story2eq = function(problem){
    // blue success
}

//FACTOR statement on student assumptions about what a problem should look like
//Q: why do people think certain strategies are good for certain problems
var getAnswer = function(problem, strategy){
    // STORY
    var path_to_follow = problem.story ?
        (strategy == "arithmetic" ? story2procedure(problem) : story2eq(problem)) :
    // EQUATION
        strategy == "mixed" ? eq2procedure(problem) : //do nothing

    var answer = 
        // TODO: use `path_to_follow` and problem.num_refs
        // if strategy == mixed || arith:
            // if problem.num_refs == 1: green success
            // else (problem.num_refs == 2) : red success
        // else (strategy == alg): blue success

        // TODO: use `path_to_follow` to get the above success probs.
        

        // KEPT THIS: (it may be helpful to have these probs for the 1ref arith strategies)
        //EQU ARITH CHOICES
        // (flip(.22) ? "symbol_manip" :
        //     flip(.14) ? "guess_check" :
        //     flip(.13) ? "unwind" :
        //     flip(.11) ? "answer_only" :
        //     flip(.32) ? "no_answer" : "unknown") :
        // STORY ARITH CHOICES
         // (flip(.05) ? "symbol_manip" :
         //    flip(.07) ? "guess_check" :
         //    flip(.5) ? "unwind" :
         //    flip(.18) ? "answer_only" :
         //    flip(.12) ? "no_answer" : "unknown") : "unknown"

    // 19/1976 chance of typo (otherwise return answer)
    return flip(.0096) ? false : answer
}

var simpleMathProblemSolver = function(problem){
    
    // TODO: the flip values here have no backing

    var strategy = 
        // STORY
        problem.story ? 
            (flip(.8) ? "arithmetic" :
            flip(.2) ? "mixed" :
            flip(.4) ? "algebraic" : "unknown") :
        // EQUATION
        ((flip(.5) ? "mixed" :
        flip(.8) ? "algebraic" : "unknown") : "unknown")
    var answer = getAnswer(strategy)
    return answer
}

//STEPS (order of ops, which ops) ----- input seq vs computing seq
//TODO: TRY APPLYING STRATEGIES, SEE WHAT INFO YOU NEED, ADD THAT INTO THESE FACTORS
// TODO: ADD IN MAYBE ACTION/PROCEDURAL VS NOT

// question: WHAT DO DIFFERENT STRATEGEIES DO (TO PROBLEMS) TO GET ANSWER

var model = function(){
    var p1 = { verbal: true, story: false } 
    return simpleMathProblemSolver(p1)
}

var d = Infer({method: 'forward', samples: 1000}, model)

d